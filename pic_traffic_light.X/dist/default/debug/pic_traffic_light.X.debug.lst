

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Apr 27 18:10:56 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 26/03/2025 GMT
    19                           ; 
    20                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0004                     fsr             equ	4
    53     0004                     fsr0            equ	4
    54     0000                     indf            equ	0
    55     0000                     indf0           equ	0
    56     0002                     pc              equ	2
    57     0002                     pcl             equ	2
    58     000A                     pclath          equ	10
    59     0003                     status          equ	3
    60     0000                     INDF            equ	0	;# 
    61     0001                     TMR0            equ	1	;# 
    62     0002                     PCL             equ	2	;# 
    63     0003                     STATUS          equ	3	;# 
    64     0004                     FSR             equ	4	;# 
    65     0005                     PORTA           equ	5	;# 
    66     0006                     PORTB           equ	6	;# 
    67     0007                     PORTC           equ	7	;# 
    68     0008                     PORTD           equ	8	;# 
    69     0009                     PORTE           equ	9	;# 
    70     000A                     PCLATH          equ	10	;# 
    71     000B                     INTCON          equ	11	;# 
    72     000C                     PIR1            equ	12	;# 
    73     000D                     PIR2            equ	13	;# 
    74     000E                     TMR1            equ	14	;# 
    75     000E                     TMR1L           equ	14	;# 
    76     000F                     TMR1H           equ	15	;# 
    77     0010                     T1CON           equ	16	;# 
    78     0011                     TMR2            equ	17	;# 
    79     0012                     T2CON           equ	18	;# 
    80     0013                     SSPBUF          equ	19	;# 
    81     0014                     SSPCON          equ	20	;# 
    82     0015                     CCPR1           equ	21	;# 
    83     0015                     CCPR1L          equ	21	;# 
    84     0016                     CCPR1H          equ	22	;# 
    85     0017                     CCP1CON         equ	23	;# 
    86     0018                     RCSTA           equ	24	;# 
    87     0019                     TXREG           equ	25	;# 
    88     001A                     RCREG           equ	26	;# 
    89     001B                     CCPR2           equ	27	;# 
    90     001B                     CCPR2L          equ	27	;# 
    91     001C                     CCPR2H          equ	28	;# 
    92     001D                     CCP2CON         equ	29	;# 
    93     001E                     ADRESH          equ	30	;# 
    94     001F                     ADCON0          equ	31	;# 
    95     0081                     OPTION_REG      equ	129	;# 
    96     0085                     TRISA           equ	133	;# 
    97     0086                     TRISB           equ	134	;# 
    98     0087                     TRISC           equ	135	;# 
    99     0088                     TRISD           equ	136	;# 
   100     0089                     TRISE           equ	137	;# 
   101     008C                     PIE1            equ	140	;# 
   102     008D                     PIE2            equ	141	;# 
   103     008E                     PCON            equ	142	;# 
   104     008F                     OSCCON          equ	143	;# 
   105     0090                     OSCTUNE         equ	144	;# 
   106     0091                     SSPCON2         equ	145	;# 
   107     0092                     PR2             equ	146	;# 
   108     0093                     SSPADD          equ	147	;# 
   109     0093                     SSPMSK          equ	147	;# 
   110     0093                     MSK             equ	147	;# 
   111     0094                     SSPSTAT         equ	148	;# 
   112     0095                     WPUB            equ	149	;# 
   113     0096                     IOCB            equ	150	;# 
   114     0097                     VRCON           equ	151	;# 
   115     0098                     TXSTA           equ	152	;# 
   116     0099                     SPBRG           equ	153	;# 
   117     009A                     SPBRGH          equ	154	;# 
   118     009B                     PWM1CON         equ	155	;# 
   119     009C                     ECCPAS          equ	156	;# 
   120     009D                     PSTRCON         equ	157	;# 
   121     009E                     ADRESL          equ	158	;# 
   122     009F                     ADCON1          equ	159	;# 
   123     0105                     WDTCON          equ	261	;# 
   124     0107                     CM1CON0         equ	263	;# 
   125     0108                     CM2CON0         equ	264	;# 
   126     0109                     CM2CON1         equ	265	;# 
   127     010C                     EEDATA          equ	268	;# 
   128     010C                     EEDAT           equ	268	;# 
   129     010D                     EEADR           equ	269	;# 
   130     010E                     EEDATH          equ	270	;# 
   131     010F                     EEADRH          equ	271	;# 
   132     0185                     SRCON           equ	389	;# 
   133     0187                     BAUDCTL         equ	391	;# 
   134     0188                     ANSEL           equ	392	;# 
   135     0189                     ANSELH          equ	393	;# 
   136     018C                     EECON1          equ	396	;# 
   137     018D                     EECON2          equ	397	;# 
   138     0000                     INDF            equ	0	;# 
   139     0001                     TMR0            equ	1	;# 
   140     0002                     PCL             equ	2	;# 
   141     0003                     STATUS          equ	3	;# 
   142     0004                     FSR             equ	4	;# 
   143     0005                     PORTA           equ	5	;# 
   144     0006                     PORTB           equ	6	;# 
   145     0007                     PORTC           equ	7	;# 
   146     0008                     PORTD           equ	8	;# 
   147     0009                     PORTE           equ	9	;# 
   148     000A                     PCLATH          equ	10	;# 
   149     000B                     INTCON          equ	11	;# 
   150     000C                     PIR1            equ	12	;# 
   151     000D                     PIR2            equ	13	;# 
   152     000E                     TMR1            equ	14	;# 
   153     000E                     TMR1L           equ	14	;# 
   154     000F                     TMR1H           equ	15	;# 
   155     0010                     T1CON           equ	16	;# 
   156     0011                     TMR2            equ	17	;# 
   157     0012                     T2CON           equ	18	;# 
   158     0013                     SSPBUF          equ	19	;# 
   159     0014                     SSPCON          equ	20	;# 
   160     0015                     CCPR1           equ	21	;# 
   161     0015                     CCPR1L          equ	21	;# 
   162     0016                     CCPR1H          equ	22	;# 
   163     0017                     CCP1CON         equ	23	;# 
   164     0018                     RCSTA           equ	24	;# 
   165     0019                     TXREG           equ	25	;# 
   166     001A                     RCREG           equ	26	;# 
   167     001B                     CCPR2           equ	27	;# 
   168     001B                     CCPR2L          equ	27	;# 
   169     001C                     CCPR2H          equ	28	;# 
   170     001D                     CCP2CON         equ	29	;# 
   171     001E                     ADRESH          equ	30	;# 
   172     001F                     ADCON0          equ	31	;# 
   173     0081                     OPTION_REG      equ	129	;# 
   174     0085                     TRISA           equ	133	;# 
   175     0086                     TRISB           equ	134	;# 
   176     0087                     TRISC           equ	135	;# 
   177     0088                     TRISD           equ	136	;# 
   178     0089                     TRISE           equ	137	;# 
   179     008C                     PIE1            equ	140	;# 
   180     008D                     PIE2            equ	141	;# 
   181     008E                     PCON            equ	142	;# 
   182     008F                     OSCCON          equ	143	;# 
   183     0090                     OSCTUNE         equ	144	;# 
   184     0091                     SSPCON2         equ	145	;# 
   185     0092                     PR2             equ	146	;# 
   186     0093                     SSPADD          equ	147	;# 
   187     0093                     SSPMSK          equ	147	;# 
   188     0093                     MSK             equ	147	;# 
   189     0094                     SSPSTAT         equ	148	;# 
   190     0095                     WPUB            equ	149	;# 
   191     0096                     IOCB            equ	150	;# 
   192     0097                     VRCON           equ	151	;# 
   193     0098                     TXSTA           equ	152	;# 
   194     0099                     SPBRG           equ	153	;# 
   195     009A                     SPBRGH          equ	154	;# 
   196     009B                     PWM1CON         equ	155	;# 
   197     009C                     ECCPAS          equ	156	;# 
   198     009D                     PSTRCON         equ	157	;# 
   199     009E                     ADRESL          equ	158	;# 
   200     009F                     ADCON1          equ	159	;# 
   201     0105                     WDTCON          equ	261	;# 
   202     0107                     CM1CON0         equ	263	;# 
   203     0108                     CM2CON0         equ	264	;# 
   204     0109                     CM2CON1         equ	265	;# 
   205     010C                     EEDATA          equ	268	;# 
   206     010C                     EEDAT           equ	268	;# 
   207     010D                     EEADR           equ	269	;# 
   208     010E                     EEDATH          equ	270	;# 
   209     010F                     EEADRH          equ	271	;# 
   210     0185                     SRCON           equ	389	;# 
   211     0187                     BAUDCTL         equ	391	;# 
   212     0188                     ANSEL           equ	392	;# 
   213     0189                     ANSELH          equ	393	;# 
   214     018C                     EECON1          equ	396	;# 
   215     018D                     EECON2          equ	397	;# 
   216     0000                     INDF            equ	0	;# 
   217     0001                     TMR0            equ	1	;# 
   218     0002                     PCL             equ	2	;# 
   219     0003                     STATUS          equ	3	;# 
   220     0004                     FSR             equ	4	;# 
   221     0005                     PORTA           equ	5	;# 
   222     0006                     PORTB           equ	6	;# 
   223     0007                     PORTC           equ	7	;# 
   224     0008                     PORTD           equ	8	;# 
   225     0009                     PORTE           equ	9	;# 
   226     000A                     PCLATH          equ	10	;# 
   227     000B                     INTCON          equ	11	;# 
   228     000C                     PIR1            equ	12	;# 
   229     000D                     PIR2            equ	13	;# 
   230     000E                     TMR1            equ	14	;# 
   231     000E                     TMR1L           equ	14	;# 
   232     000F                     TMR1H           equ	15	;# 
   233     0010                     T1CON           equ	16	;# 
   234     0011                     TMR2            equ	17	;# 
   235     0012                     T2CON           equ	18	;# 
   236     0013                     SSPBUF          equ	19	;# 
   237     0014                     SSPCON          equ	20	;# 
   238     0015                     CCPR1           equ	21	;# 
   239     0015                     CCPR1L          equ	21	;# 
   240     0016                     CCPR1H          equ	22	;# 
   241     0017                     CCP1CON         equ	23	;# 
   242     0018                     RCSTA           equ	24	;# 
   243     0019                     TXREG           equ	25	;# 
   244     001A                     RCREG           equ	26	;# 
   245     001B                     CCPR2           equ	27	;# 
   246     001B                     CCPR2L          equ	27	;# 
   247     001C                     CCPR2H          equ	28	;# 
   248     001D                     CCP2CON         equ	29	;# 
   249     001E                     ADRESH          equ	30	;# 
   250     001F                     ADCON0          equ	31	;# 
   251     0081                     OPTION_REG      equ	129	;# 
   252     0085                     TRISA           equ	133	;# 
   253     0086                     TRISB           equ	134	;# 
   254     0087                     TRISC           equ	135	;# 
   255     0088                     TRISD           equ	136	;# 
   256     0089                     TRISE           equ	137	;# 
   257     008C                     PIE1            equ	140	;# 
   258     008D                     PIE2            equ	141	;# 
   259     008E                     PCON            equ	142	;# 
   260     008F                     OSCCON          equ	143	;# 
   261     0090                     OSCTUNE         equ	144	;# 
   262     0091                     SSPCON2         equ	145	;# 
   263     0092                     PR2             equ	146	;# 
   264     0093                     SSPADD          equ	147	;# 
   265     0093                     SSPMSK          equ	147	;# 
   266     0093                     MSK             equ	147	;# 
   267     0094                     SSPSTAT         equ	148	;# 
   268     0095                     WPUB            equ	149	;# 
   269     0096                     IOCB            equ	150	;# 
   270     0097                     VRCON           equ	151	;# 
   271     0098                     TXSTA           equ	152	;# 
   272     0099                     SPBRG           equ	153	;# 
   273     009A                     SPBRGH          equ	154	;# 
   274     009B                     PWM1CON         equ	155	;# 
   275     009C                     ECCPAS          equ	156	;# 
   276     009D                     PSTRCON         equ	157	;# 
   277     009E                     ADRESL          equ	158	;# 
   278     009F                     ADCON1          equ	159	;# 
   279     0105                     WDTCON          equ	261	;# 
   280     0107                     CM1CON0         equ	263	;# 
   281     0108                     CM2CON0         equ	264	;# 
   282     0109                     CM2CON1         equ	265	;# 
   283     010C                     EEDATA          equ	268	;# 
   284     010C                     EEDAT           equ	268	;# 
   285     010D                     EEADR           equ	269	;# 
   286     010E                     EEDATH          equ	270	;# 
   287     010F                     EEADRH          equ	271	;# 
   288     0185                     SRCON           equ	389	;# 
   289     0187                     BAUDCTL         equ	391	;# 
   290     0188                     ANSEL           equ	392	;# 
   291     0189                     ANSELH          equ	393	;# 
   292     018C                     EECON1          equ	396	;# 
   293     018D                     EECON2          equ	397	;# 
   294     0000                     INDF            equ	0	;# 
   295     0001                     TMR0            equ	1	;# 
   296     0002                     PCL             equ	2	;# 
   297     0003                     STATUS          equ	3	;# 
   298     0004                     FSR             equ	4	;# 
   299     0005                     PORTA           equ	5	;# 
   300     0006                     PORTB           equ	6	;# 
   301     0007                     PORTC           equ	7	;# 
   302     0008                     PORTD           equ	8	;# 
   303     0009                     PORTE           equ	9	;# 
   304     000A                     PCLATH          equ	10	;# 
   305     000B                     INTCON          equ	11	;# 
   306     000C                     PIR1            equ	12	;# 
   307     000D                     PIR2            equ	13	;# 
   308     000E                     TMR1            equ	14	;# 
   309     000E                     TMR1L           equ	14	;# 
   310     000F                     TMR1H           equ	15	;# 
   311     0010                     T1CON           equ	16	;# 
   312     0011                     TMR2            equ	17	;# 
   313     0012                     T2CON           equ	18	;# 
   314     0013                     SSPBUF          equ	19	;# 
   315     0014                     SSPCON          equ	20	;# 
   316     0015                     CCPR1           equ	21	;# 
   317     0015                     CCPR1L          equ	21	;# 
   318     0016                     CCPR1H          equ	22	;# 
   319     0017                     CCP1CON         equ	23	;# 
   320     0018                     RCSTA           equ	24	;# 
   321     0019                     TXREG           equ	25	;# 
   322     001A                     RCREG           equ	26	;# 
   323     001B                     CCPR2           equ	27	;# 
   324     001B                     CCPR2L          equ	27	;# 
   325     001C                     CCPR2H          equ	28	;# 
   326     001D                     CCP2CON         equ	29	;# 
   327     001E                     ADRESH          equ	30	;# 
   328     001F                     ADCON0          equ	31	;# 
   329     0081                     OPTION_REG      equ	129	;# 
   330     0085                     TRISA           equ	133	;# 
   331     0086                     TRISB           equ	134	;# 
   332     0087                     TRISC           equ	135	;# 
   333     0088                     TRISD           equ	136	;# 
   334     0089                     TRISE           equ	137	;# 
   335     008C                     PIE1            equ	140	;# 
   336     008D                     PIE2            equ	141	;# 
   337     008E                     PCON            equ	142	;# 
   338     008F                     OSCCON          equ	143	;# 
   339     0090                     OSCTUNE         equ	144	;# 
   340     0091                     SSPCON2         equ	145	;# 
   341     0092                     PR2             equ	146	;# 
   342     0093                     SSPADD          equ	147	;# 
   343     0093                     SSPMSK          equ	147	;# 
   344     0093                     MSK             equ	147	;# 
   345     0094                     SSPSTAT         equ	148	;# 
   346     0095                     WPUB            equ	149	;# 
   347     0096                     IOCB            equ	150	;# 
   348     0097                     VRCON           equ	151	;# 
   349     0098                     TXSTA           equ	152	;# 
   350     0099                     SPBRG           equ	153	;# 
   351     009A                     SPBRGH          equ	154	;# 
   352     009B                     PWM1CON         equ	155	;# 
   353     009C                     ECCPAS          equ	156	;# 
   354     009D                     PSTRCON         equ	157	;# 
   355     009E                     ADRESL          equ	158	;# 
   356     009F                     ADCON1          equ	159	;# 
   357     0105                     WDTCON          equ	261	;# 
   358     0107                     CM1CON0         equ	263	;# 
   359     0108                     CM2CON0         equ	264	;# 
   360     0109                     CM2CON1         equ	265	;# 
   361     010C                     EEDATA          equ	268	;# 
   362     010C                     EEDAT           equ	268	;# 
   363     010D                     EEADR           equ	269	;# 
   364     010E                     EEDATH          equ	270	;# 
   365     010F                     EEADRH          equ	271	;# 
   366     0185                     SRCON           equ	389	;# 
   367     0187                     BAUDCTL         equ	391	;# 
   368     0188                     ANSEL           equ	392	;# 
   369     0189                     ANSELH          equ	393	;# 
   370     018C                     EECON1          equ	396	;# 
   371     018D                     EECON2          equ	397	;# 
   372     0000                     INDF            equ	0	;# 
   373     0001                     TMR0            equ	1	;# 
   374     0002                     PCL             equ	2	;# 
   375     0003                     STATUS          equ	3	;# 
   376     0004                     FSR             equ	4	;# 
   377     0005                     PORTA           equ	5	;# 
   378     0006                     PORTB           equ	6	;# 
   379     0007                     PORTC           equ	7	;# 
   380     0008                     PORTD           equ	8	;# 
   381     0009                     PORTE           equ	9	;# 
   382     000A                     PCLATH          equ	10	;# 
   383     000B                     INTCON          equ	11	;# 
   384     000C                     PIR1            equ	12	;# 
   385     000D                     PIR2            equ	13	;# 
   386     000E                     TMR1            equ	14	;# 
   387     000E                     TMR1L           equ	14	;# 
   388     000F                     TMR1H           equ	15	;# 
   389     0010                     T1CON           equ	16	;# 
   390     0011                     TMR2            equ	17	;# 
   391     0012                     T2CON           equ	18	;# 
   392     0013                     SSPBUF          equ	19	;# 
   393     0014                     SSPCON          equ	20	;# 
   394     0015                     CCPR1           equ	21	;# 
   395     0015                     CCPR1L          equ	21	;# 
   396     0016                     CCPR1H          equ	22	;# 
   397     0017                     CCP1CON         equ	23	;# 
   398     0018                     RCSTA           equ	24	;# 
   399     0019                     TXREG           equ	25	;# 
   400     001A                     RCREG           equ	26	;# 
   401     001B                     CCPR2           equ	27	;# 
   402     001B                     CCPR2L          equ	27	;# 
   403     001C                     CCPR2H          equ	28	;# 
   404     001D                     CCP2CON         equ	29	;# 
   405     001E                     ADRESH          equ	30	;# 
   406     001F                     ADCON0          equ	31	;# 
   407     0081                     OPTION_REG      equ	129	;# 
   408     0085                     TRISA           equ	133	;# 
   409     0086                     TRISB           equ	134	;# 
   410     0087                     TRISC           equ	135	;# 
   411     0088                     TRISD           equ	136	;# 
   412     0089                     TRISE           equ	137	;# 
   413     008C                     PIE1            equ	140	;# 
   414     008D                     PIE2            equ	141	;# 
   415     008E                     PCON            equ	142	;# 
   416     008F                     OSCCON          equ	143	;# 
   417     0090                     OSCTUNE         equ	144	;# 
   418     0091                     SSPCON2         equ	145	;# 
   419     0092                     PR2             equ	146	;# 
   420     0093                     SSPADD          equ	147	;# 
   421     0093                     SSPMSK          equ	147	;# 
   422     0093                     MSK             equ	147	;# 
   423     0094                     SSPSTAT         equ	148	;# 
   424     0095                     WPUB            equ	149	;# 
   425     0096                     IOCB            equ	150	;# 
   426     0097                     VRCON           equ	151	;# 
   427     0098                     TXSTA           equ	152	;# 
   428     0099                     SPBRG           equ	153	;# 
   429     009A                     SPBRGH          equ	154	;# 
   430     009B                     PWM1CON         equ	155	;# 
   431     009C                     ECCPAS          equ	156	;# 
   432     009D                     PSTRCON         equ	157	;# 
   433     009E                     ADRESL          equ	158	;# 
   434     009F                     ADCON1          equ	159	;# 
   435     0105                     WDTCON          equ	261	;# 
   436     0107                     CM1CON0         equ	263	;# 
   437     0108                     CM2CON0         equ	264	;# 
   438     0109                     CM2CON1         equ	265	;# 
   439     010C                     EEDATA          equ	268	;# 
   440     010C                     EEDAT           equ	268	;# 
   441     010D                     EEADR           equ	269	;# 
   442     010E                     EEDATH          equ	270	;# 
   443     010F                     EEADRH          equ	271	;# 
   444     0185                     SRCON           equ	389	;# 
   445     0187                     BAUDCTL         equ	391	;# 
   446     0188                     ANSEL           equ	392	;# 
   447     0189                     ANSELH          equ	393	;# 
   448     018C                     EECON1          equ	396	;# 
   449     018D                     EECON2          equ	397	;# 
   450                           
   451                           	psect	idataBANK0
   452     072B                     __pidataBANK0:
   453                           
   454                           ;initializer for _binary_pattern
   455     072B  34C0               	retlw	192
   456     072C  34F9               	retlw	249
   457     072D  34A4               	retlw	164
   458     072E  34B0               	retlw	176
   459     072F  3499               	retlw	153
   460     0730  3492               	retlw	146
   461     0731  3482               	retlw	130
   462     0732  34F8               	retlw	248
   463     0733  3480               	retlw	128
   464     0734  3490               	retlw	144
   465                           
   466                           ;initializer for main@F1462
   467     0735  3480               	retlw	128
   468     0736  34C0               	retlw	192
   469     0737  34E0               	retlw	224
   470     0738  34F0               	retlw	240
   471     0739  34F8               	retlw	248
   472     073A  34FC               	retlw	252
   473     073B  34FE               	retlw	254
   474     073C  34FF               	retlw	255
   475                           
   476                           	psect	strings
   477     0003                     __pstrings:
   478     0003                     stringtab:
   479     0003                     __stringtab:
   480     0003                     stringcode:	
   481                           ;	String table - string pointers are 1 byte each
   482                           
   483     0003                     stringdir:
   484     0003  3000               	movlw	high stringdir
   485     0004  008A               	movwf	10
   486     0005  0804               	movf	4,w
   487     0006  0A84               	incf	4,f
   488     0007  0782               	addwf	2,f
   489     0008                     __stringbase:
   490     0008  3400               	retlw	0
   491     0009                     __end_of__stringtab:
   492     0009                     _YELLOW_TIME:
   493     0009  34E8               	retlw	232
   494     000A  3403               	retlw	3
   495     000B                     __end_of_YELLOW_TIME:
   496     000B                     _ROAD2_TIME:
   497     000B  34B8               	retlw	184
   498     000C  340B               	retlw	11
   499     000D                     __end_of_ROAD2_TIME:
   500     000D                     _ROAD1_TIME:
   501     000D  34D0               	retlw	208
   502     000E  3407               	retlw	7
   503     000F                     __end_of_ROAD1_TIME:
   504     0007                     _PORTCbits      set	7
   505     0008                     _PORTDbits      set	8
   506     0009                     _PORTE          set	9
   507     0009                     _PORTEbits      set	9
   508     0047                     _RD7            set	71
   509     0035                     _RB5            set	53
   510     0034                     _RB4            set	52
   511     0044                     _RD4            set	68
   512     0041                     _RD1            set	65
   513     0040                     _RD0            set	64
   514     0045                     _RD5            set	69
   515     0042                     _RD2            set	66
   516     0043                     _RD3            set	67
   517     0088                     _TRISDbits      set	136
   518     0087                     _TRISCbits      set	135
   519     0089                     _TRISE          set	137
   520     000F                     STR_1:
   521     000F  3425               	retlw	37	;'%'
   522     0010  3464               	retlw	100	;'d'
   523     0011  3400               	retlw	0
   524                           
   525                           	psect	cinit
   526     07E5                     start_initialization:	
   527                           ; #config settings
   528                           
   529     07E5                     __initialization:
   530                           
   531                           ; Initialize objects allocated to BANK0
   532     07E5  1383               	bcf	3,7	;select IRP bank0
   533     07E6  3032               	movlw	low (__pdataBANK0+18)
   534     07E7  00FD               	movwf	btemp+-1
   535     07E8  3007               	movlw	high __pidataBANK0
   536     07E9  00FE               	movwf	btemp
   537     07EA  302B               	movlw	low __pidataBANK0
   538     07EB  00FF               	movwf	btemp+1
   539     07EC  3020               	movlw	low __pdataBANK0
   540     07ED  0084               	movwf	4
   541     07EE  120A  118A  2741  120A  118A  	fcall	init_ram0
   542                           
   543                           ; Clear objects allocated to BANK0
   544     07F3  01BC               	clrf	__pbssBANK0& (0+127)
   545     07F4  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   546     07F5  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   547     07F6  01BF               	clrf	(__pbssBANK0+3)& (0+127)
   548                           
   549                           ; Clear objects allocated to COMMON
   550     07F7  01F9               	clrf	__pbssCOMMON& (0+127)
   551     07F8  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   552     07F9  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   553     07FA  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   554     07FB  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   555     07FC                     end_of_initialization:	
   556                           ;End of C runtime variable initialization code
   557                           
   558     07FC                     __end_of__initialization:
   559     07FC  0183               	clrf	3
   560     07FD  120A  118A  2F94   	ljmp	_main	;jump to C main() function
   561                           
   562                           	psect	bssCOMMON
   563     0079                     __pbssCOMMON:
   564     0079                     _counter:
   565     0079                     	ds	2
   566     007B                     _mode:
   567     007B                     	ds	1
   568     007C                     _turn:
   569     007C                     	ds	1
   570     007D                     _exitsign:
   571     007D                     	ds	1
   572                           
   573                           	psect	bssBANK0
   574     003C                     __pbssBANK0:
   575     003C                     _b:
   576     003C                     	ds	2
   577     003E                     _a:
   578     003E                     	ds	2
   579                           
   580                           	psect	dataBANK0
   581     0020                     __pdataBANK0:
   582     0020                     _binary_pattern:
   583     0020                     	ds	10
   584     002A                     main@F1462:
   585     002A                     	ds	8
   586                           
   587                           	psect	inittext
   588     073D                     init_fetch0:	
   589                           ;	Called with low address in FSR and high address in W
   590                           
   591     073D  087E               	movf	btemp,w
   592     073E  008A               	movwf	10
   593     073F  087F               	movf	btemp+1,w
   594     0740  0082               	movwf	2
   595     0741                     init_ram0:	
   596                           ;Called with:
   597                           ;	high address of idata address in btemp 
   598                           ;	low address of idata address in btemp+1 
   599                           ;	low address of data in FSR
   600                           ;	high address + 1 of data in btemp-1
   601                           
   602     0741  120A  118A  273D  120A  118A  	fcall	init_fetch0
   603     0746  0080               	movwf	0
   604     0747  0A84               	incf	4,f
   605     0748  0804               	movf	4,w
   606     0749  067D               	xorwf	btemp+-1,w
   607     074A  1903               	btfsc	3,2
   608     074B  3400               	retlw	0
   609     074C  0AFF               	incf	btemp+1,f
   610     074D  1903               	btfsc	3,2
   611     074E  0AFE               	incf	btemp,f
   612     074F  2F41               	goto	init_ram0
   613                           
   614                           	psect	cstackCOMMON
   615     0070                     __pcstackCOMMON:
   616     0070                     ?_sendData:
   617     0070                     ?_main:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     ??_sendData:	
   621                           ; 1 bytes @ 0x0
   622                           
   623                           
   624                           ; 1 bytes @ 0x0
   625     0070                     	ds	2
   626     0072                     sendData@data:
   627                           
   628                           ; 1 bytes @ 0x2
   629     0072                     	ds	1
   630     0073                     sendData@i:
   631                           
   632                           ; 2 bytes @ 0x3
   633     0073                     	ds	2
   634     0075                     ??_main:
   635                           
   636                           ; 1 bytes @ 0x5
   637     0075                     	ds	4
   638                           
   639                           	psect	cstackBANK0
   640     0032                     __pcstackBANK0:
   641     0032                     main@led:
   642                           
   643                           ; 8 bytes @ 0x0
   644     0032                     	ds	8
   645     003A                     main@i:
   646                           
   647                           ; 2 bytes @ 0x8
   648     003A                     	ds	2
   649                           
   650                           	psect	maintext
   651     0794                     __pmaintext:	
   652 ;;
   653 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   654 ;;
   655 ;; *************** function _main *****************
   656 ;; Defined at:
   657 ;;		line 28 in file "main.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  i               2    8[BANK0 ] int 
   662 ;;  led             8    0[BANK0 ] unsigned char [8]
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : B00/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         0      10       0       0       0
   674 ;;      Temps:          4       0       0       0       0
   675 ;;      Totals:         4      10       0       0       0
   676 ;;Total ram usage:       14 bytes
   677 ;; Hardware stack levels required when called: 1
   678 ;; This function calls:
   679 ;;		_sendData
   680 ;; This function is called by:
   681 ;;		Startup code after reset
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685     0794                     _main:	
   686                           ;psect for function _main
   687                           
   688     0794                     l1147:	
   689                           ;incstack = 0
   690                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   691                           
   692                           
   693                           ;main.c: 29:     TRISE = 0x00;
   694     0794  1683               	bsf	3,5	;RP0=1, select bank1
   695     0795  1303               	bcf	3,6	;RP1=0, select bank1
   696     0796  0189               	clrf	9	;volatile
   697                           
   698                           ;main.c: 30:     PORTE = 0x00;
   699     0797  1283               	bcf	3,5	;RP0=0, select bank0
   700     0798  1303               	bcf	3,6	;RP1=0, select bank0
   701     0799  0189               	clrf	9	;volatile
   702     079A                     l1149:
   703                           
   704                           ;main.c: 32:     uint8_t led[8]={0b10000000, 0b11000000,0b11100000,0b11110000,0b11111000
      +                          , 0b11111100, 0b11111110, 0b11111111};
   705     079A  302A               	movlw	main@F1462& (0+255)
   706     079B  0084               	movwf	4
   707     079C  3032               	movlw	low main@led
   708     079D  00F5               	movwf	??_main
   709     079E  3008               	movlw	8
   710     079F  00F6               	movwf	??_main+1
   711     07A0                     u500:
   712     07A0  1383               	bcf	3,7	;select IRP bank0
   713     07A1  0800               	movf	0,w
   714     07A2  00F7               	movwf	??_main+2
   715     07A3  0A04               	incf	4,w
   716     07A4  00F8               	movwf	??_main+3
   717     07A5  0875               	movf	??_main,w
   718     07A6  0084               	movwf	4
   719     07A7  0877               	movf	??_main+2,w
   720     07A8  0080               	movwf	0
   721     07A9  0A04               	incf	4,w
   722     07AA  00F5               	movwf	??_main
   723     07AB  0878               	movf	??_main+3,w
   724     07AC  0084               	movwf	4
   725     07AD  0BF6               	decfsz	??_main+1,f
   726     07AE  2FA0               	goto	u500
   727     07AF                     l1151:
   728                           
   729                           ;main.c: 35:          for(int i=0;i<8;i++) {
   730     07AF  1283               	bcf	3,5	;RP0=0, select bank0
   731     07B0  1303               	bcf	3,6	;RP1=0, select bank0
   732     07B1  01BA               	clrf	main@i
   733     07B2  01BB               	clrf	main@i+1
   734     07B3                     l1157:
   735                           
   736                           ;main.c: 36:              sendData(led[i]);
   737     07B3  1283               	bcf	3,5	;RP0=0, select bank0
   738     07B4  1303               	bcf	3,6	;RP1=0, select bank0
   739     07B5  083A               	movf	main@i,w
   740     07B6  3E32               	addlw	(low (main@led| 0))& (0+255)
   741     07B7  0084               	movwf	4
   742     07B8  1383               	bcf	3,7	;select IRP bank0
   743     07B9  0800               	movf	0,w
   744     07BA  120A  118A  2750  120A  118A  	fcall	_sendData
   745     07BF                     l1159:
   746                           
   747                           ;main.c: 37:              _delay((unsigned long)((500)*(4000000/4000.0)));
   748     07BF  3003               	movlw	3
   749     07C0  00F7               	movwf	??_main+2
   750     07C1  308A               	movlw	138
   751     07C2  00F6               	movwf	??_main+1
   752     07C3  3055               	movlw	85
   753     07C4  00F5               	movwf	??_main
   754     07C5                     u527:
   755     07C5  0BF5               	decfsz	??_main,f
   756     07C6  2FC5               	goto	u527
   757     07C7  0BF6               	decfsz	??_main+1,f
   758     07C8  2FC5               	goto	u527
   759     07C9  0BF7               	decfsz	??_main+2,f
   760     07CA  2FC5               	goto	u527
   761     07CB  2FCC               	nop2
   762     07CC                     l1161:
   763                           
   764                           ;main.c: 38:          }
   765     07CC  3001               	movlw	1
   766     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   767     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   768     07CF  07BA               	addwf	main@i,f
   769     07D0  1803               	skipnc
   770     07D1  0ABB               	incf	main@i+1,f
   771     07D2  3000               	movlw	0
   772     07D3  07BB               	addwf	main@i+1,f
   773     07D4                     l1163:
   774     07D4  083B               	movf	main@i+1,w
   775     07D5  3A80               	xorlw	128
   776     07D6  00FF               	movwf	btemp+1
   777     07D7  3080               	movlw	128
   778     07D8  027F               	subwf	btemp+1,w
   779     07D9  1D03               	skipz
   780     07DA  2FDD               	goto	u515
   781     07DB  3008               	movlw	8
   782     07DC  023A               	subwf	main@i,w
   783     07DD                     u515:
   784     07DD  1C03               	skipc
   785     07DE  2FE0               	goto	u511
   786     07DF  2FE1               	goto	u510
   787     07E0                     u511:
   788     07E0  2FB3               	goto	l1157
   789     07E1                     u510:
   790     07E1  2FAF               	goto	l1151
   791     07E2  120A  118A  2800   	ljmp	start
   792     07E5                     __end_of_main:
   793                           
   794                           	psect	text1
   795     0750                     __ptext1:	
   796 ;; *************** function _sendData *****************
   797 ;; Defined at:
   798 ;;		line 16 in file "main.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  data            1    wreg     unsigned char 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  data            1    2[COMMON] unsigned char 
   803 ;;  i               2    3[COMMON] int 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0, btemp+1
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         3       0       0       0       0
   815 ;;      Temps:          2       0       0       0       0
   816 ;;      Totals:         5       0       0       0       0
   817 ;;Total ram usage:        5 bytes
   818 ;; Hardware stack levels used: 1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826     0750                     _sendData:	
   827                           ;psect for function _sendData
   828                           
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in _sendData: [wreg+status,2+status,0+btemp+1]
   832                           ;sendData@data stored from wreg
   833     0750  00F2               	movwf	sendData@data
   834     0751                     l1123:
   835                           
   836                           ;main.c: 17:     for(int i=0;i<8;i++){
   837     0751  01F3               	clrf	sendData@i
   838     0752  01F4               	clrf	sendData@i+1
   839     0753                     l1129:
   840                           
   841                           ;main.c: 18:         PORTEbits.RE1 = (data >> i) & 0x01;
   842     0753  0872               	movf	sendData@data,w
   843     0754  00F0               	movwf	??_sendData
   844     0755  0A73               	incf	sendData@i,w
   845     0756  2F59               	goto	u484
   846     0757                     u485:
   847     0757  1003               	clrc
   848     0758  0CF0               	rrf	??_sendData,f
   849     0759                     u484:
   850     0759  3EFF               	addlw	-1
   851     075A  1D03               	skipz
   852     075B  2F57               	goto	u485
   853     075C  0870               	movf	??_sendData,w
   854     075D  3901               	andlw	1
   855     075E  00F1               	movwf	??_sendData+1
   856     075F  0DF1               	rlf	??_sendData+1,f
   857     0760  1283               	bcf	3,5	;RP0=0, select bank0
   858     0761  1303               	bcf	3,6	;RP1=0, select bank0
   859     0762  0809               	movf	9,w	;volatile
   860     0763  0671               	xorwf	??_sendData+1,w
   861     0764  39FD               	andlw	-3
   862     0765  0671               	xorwf	??_sendData+1,w
   863     0766  0089               	movwf	9	;volatile
   864     0767                     l1131:
   865                           
   866                           ;main.c: 19:         PORTEbits.RE0 = 1;
   867     0767  1409               	bsf	9,0	;volatile
   868     0768                     l1133:
   869                           
   870                           ;main.c: 20:         _delay((unsigned long)((500)*(4000000/4000000.0)));
   871     0768  30A6               	movlw	166
   872     0769  00F0               	movwf	??_sendData
   873     076A                     u537:
   874     076A  0BF0               	decfsz	??_sendData,f
   875     076B  2F6A               	goto	u537
   876     076C  0000               	nop
   877     076D                     l1135:
   878                           
   879                           ;main.c: 21:         PORTEbits.RE0 = 0;
   880     076D  1283               	bcf	3,5	;RP0=0, select bank0
   881     076E  1303               	bcf	3,6	;RP1=0, select bank0
   882     076F  1009               	bcf	9,0	;volatile
   883     0770                     l1137:
   884                           
   885                           ;main.c: 22:         _delay((unsigned long)((500)*(4000000/4000000.0)));
   886     0770  30A6               	movlw	166
   887     0771  00F0               	movwf	??_sendData
   888     0772                     u547:
   889     0772  0BF0               	decfsz	??_sendData,f
   890     0773  2F72               	goto	u547
   891     0774  0000               	nop
   892     0775                     l1139:
   893                           
   894                           ;main.c: 23:     }
   895     0775  3001               	movlw	1
   896     0776  07F3               	addwf	sendData@i,f
   897     0777  1803               	skipnc
   898     0778  0AF4               	incf	sendData@i+1,f
   899     0779  3000               	movlw	0
   900     077A  07F4               	addwf	sendData@i+1,f
   901     077B                     l1141:
   902     077B  0874               	movf	sendData@i+1,w
   903     077C  3A80               	xorlw	128
   904     077D  00FF               	movwf	btemp+1
   905     077E  3080               	movlw	128
   906     077F  027F               	subwf	btemp+1,w
   907     0780  1D03               	skipz
   908     0781  2F84               	goto	u495
   909     0782  3008               	movlw	8
   910     0783  0273               	subwf	sendData@i,w
   911     0784                     u495:
   912     0784  1C03               	skipc
   913     0785  2F87               	goto	u491
   914     0786  2F88               	goto	u490
   915     0787                     u491:
   916     0787  2F53               	goto	l1129
   917     0788                     u490:
   918     0788                     l32:
   919                           
   920                           ;main.c: 24:     PORTEbits.RE2 = 1;
   921     0788  1283               	bcf	3,5	;RP0=0, select bank0
   922     0789  1303               	bcf	3,6	;RP1=0, select bank0
   923     078A  1509               	bsf	9,2	;volatile
   924     078B                     l1143:
   925                           
   926                           ;main.c: 25:     _delay((unsigned long)((500)*(4000000/4000000.0)));
   927     078B  30A6               	movlw	166
   928     078C  00F0               	movwf	??_sendData
   929     078D                     u557:
   930     078D  0BF0               	decfsz	??_sendData,f
   931     078E  2F8D               	goto	u557
   932     078F  0000               	nop
   933     0790                     l1145:
   934                           
   935                           ;main.c: 26:     PORTEbits.RE2 = 0;
   936     0790  1283               	bcf	3,5	;RP0=0, select bank0
   937     0791  1303               	bcf	3,6	;RP1=0, select bank0
   938     0792  1109               	bcf	9,2	;volatile
   939     0793                     l33:
   940     0793  0008               	return
   941     0794                     __end_of_sendData:
   942     0002                     ___latbits      equ	2
   943     007E                     btemp           set	126	;btemp
   944     007E                     wtemp0          set	126
   945                           
   946                           	psect	config
   947                           
   948                           ;Config register CONFIG1 @ 0x2007
   949                           ;	Oscillator Selection bits
   950                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
   951                           ;	Watchdog Timer Enable bit
   952                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   953                           ;	Power-up Timer Enable bit
   954                           ;	PWRTE = OFF, PWRT disabled
   955                           ;	RE3/MCLR pin function select bit
   956                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   957                           ;	Code Protection bit
   958                           ;	CP = OFF, Program memory code protection is disabled
   959                           ;	Data Code Protection bit
   960                           ;	CPD = OFF, Data memory code protection is disabled
   961                           ;	Brown Out Reset Selection bits
   962                           ;	BOREN = OFF, BOR disabled
   963                           ;	Internal External Switchover bit
   964                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   965                           ;	Fail-Safe Clock Monitor Enabled bit
   966                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   967                           ;	Low Voltage Programming Enable bit
   968                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   969                           ;	In-Circuit Debugger Mode bit
   970                           ;	DEBUG = 0x1, unprogrammed default
   971     2007                     	org	8199
   972     2007  30D7               	dw	12503
   973                           
   974                           ;Config register CONFIG2 @ 0x2008
   975                           ;	Brown-out Reset Selection bit
   976                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   977                           ;	Flash Program Memory Self Write Enable bits
   978                           ;	WRT = OFF, Write protection off
   979     2008                     	org	8200
   980     2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    6
    Data        18
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     10      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 6
		 -> Lcd_Write_Int@buffer(COMMON[6]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    S716$buffer	PTR unsigned char  size(1) Largest target is 6
		 -> Lcd_Write_Int@buffer(COMMON[6]), 

    S716$source	PTR const unsigned char  size(1) Largest target is 0

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMMON[10]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_sendData

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     189
                                              5 COMMON     4     4      0
                                              0 BANK0     10    10      0
                           _sendData
 ---------------------------------------------------------------------------------
 (1) _sendData                                             5     5      0      97
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _sendData

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     10      32     40.0%
BITBANK0            80      0       0      0.0%
COMMON              14      9      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      46      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Apr 27 18:10:56 2025

                      _a 003E                        _b 003C                        pc 0002  
                     l32 0788                       l33 0793                       fsr 0004  
                    _RD0 0040                      _RB4 0034                      _RD1 0041  
                    _RB5 0035                      _RD2 0042                      _RD3 0043  
                    _RD4 0044                      _RD5 0045                      _RD7 0047  
                    u500 07A0                      u510 07E1                      u511 07E0  
                    u515 07DD                      u527 07C5                      u537 076A  
                    u490 0788                      u491 0787                      u547 0772  
                    u484 0759                      u557 078D                      u485 0757  
                    u495 0784                      fsr0 0004                      indf 0000  
                   l1131 0767                     l1123 0751                     l1141 077B  
                   l1133 0768                     l1143 078B                     l1135 076D  
                   l1151 07AF                     l1145 0790                     l1137 0770  
                   l1129 0753                     l1161 07CC                     l1139 0775  
                   l1163 07D4                     l1147 0794                     l1157 07B3  
                   l1149 079A                     l1159 07BF                     STR_1 000F  
                   _main 0794                     _mode 007B                     btemp 007E  
                   _turn 007C                     start 0000                    ?_main 0070  
                  _PORTE 0009                    _TRISE 0089                    main@i 003A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E5             __end_of_main 07E5                   ??_main 0075  
       __end_of_sendData 0794  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 072B               __pbssBANK0 003C               __pmaintext 0794  
     __end_of_ROAD1_TIME 000F       __end_of_ROAD2_TIME 000D               __stringtab 0003  
         _binary_pattern 0020                ?_sendData 0070                  __ptext1 0750  
                _counter 0079                  main@led 0032     end_of_initialization 07FC  
             ??_sendData 0070                _PORTCbits 0007                _PORTDbits 0008  
              _PORTEbits 0009                _TRISCbits 0087                _TRISDbits 0088  
    start_initialization 07E5               init_fetch0 073D              __pdataBANK0 0020  
           sendData@data 0072              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0032                __pstrings 0003                main@F1462 002A  
            __stringbase 0008       __end_of__stringtab 0009                sendData@i 0073  
    __end_of_YELLOW_TIME 000B                 _exitsign 007D                 _sendData 0750  
               init_ram0 0741               _ROAD1_TIME 000D               _ROAD2_TIME 000B  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
            _YELLOW_TIME 0009  
